visualization_metadata:
  - vis_type: "table"
    description: "Table for displaying raw data"
    templates:
      - name: "single_value"
        description: "Retrieve a single value (e.g., closing price on a specific date)"
        required_columns: ["date", "close_price"]
        sql: "SELECT date, close_price FROM stock_prices WHERE symbol = '{ticker}' AND date = '{start_date}';"
        intent_keywords: ["closing price", "price on", "giá đóng cửa"]
      - name: "company_info"
        description: "Retrieve company information"
        required_columns: ["symbol", "name", "sector", "market_cap"]
        sql: "SELECT symbol, name, sector, market_cap FROM companies WHERE symbol = '{ticker}';"
        intent_keywords: ["company info", "mô tả", "description"]
    ui_requirements:
      columns: ["symbol", "name", "sector", "market_cap"]

  - vis_type: "line_chart"
    description: "Line chart for time series data"
    templates:
      - name: "daily_closing_price_time_series"
        description: "Time series of closing prices for a company within a date range"
        required_columns: ["date", "close_price"]
        sql: "SELECT date, close_price FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}' ORDER BY date;"
        intent_keywords: ["time series", "stock price", "giá cổ phiếu"]
      - name: "time_series_volume"
        description: "Time series of trading volume for a company within a date range"
        required_columns: ["date", "volume"]
        sql: "SELECT date, volume FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}' ORDER BY date;"
        intent_keywords: ["trading volume", "volume", "daily trading volume"]
    ui_requirements:
      x_col: "date"
      y_col: "close_price"

  - vis_type: "bar_chart"
    description: "Bar chart for categorical data"
    templates:
      - name: "bar_chart_price"
        description: "Average closing price by symbol within a date range"
        required_columns: ["symbol", "avg_close_price"]
        sql: "SELECT symbol, AVG(close_price) AS avg_close_price FROM stock_prices WHERE date BETWEEN '{start_date}' AND '{end_date}' GROUP BY symbol ORDER BY avg_close_price;"
        intent_keywords: ["average price", "bar chart", "biểu đồ cột"]
    ui_requirements:
      category_col: "symbol"
      value_col: "avg_close_price"

  - vis_type: "pie_chart"
    description: "Pie chart for proportions or counts"
    templates:
      - name: "pie_chart_proportion"
        description: "Market cap proportions by sector"
        required_columns: ["sector", "proportion"]
        sql: "SELECT sector, SUM(market_cap) / (SELECT SUM(market_cap) FROM companies) * 100 AS proportion FROM companies GROUP BY sector ORDER BY proportion DESC LIMIT 5;"
        intent_keywords: ["proportions", "market cap by sector", "tỷ lệ"]
      - name: "pie_chart_count"
        description: "Distribution of companies by sector with count"
        required_columns: ["sector", "count"]
        sql: "SELECT sector, COUNT(*) AS count FROM companies GROUP BY sector ORDER BY count DESC LIMIT 5;"
        intent_keywords: ["distribution", "count by sector", "phân phối"]
    ui_requirements:
      category_col: "sector"
      value_col: "proportion"

  - vis_type: "histogram"
    description: "Histogram for visualizing data frequency"
    templates:
      - name: "daily_returns_histogram"
        description: "Daily returns for a company within a date range for histogram"
        required_columns: ["daily_return"]
        sql: "SELECT (close_price - LAG(close_price) OVER (PARTITION BY symbol ORDER BY date)) / LAG(close_price) OVER (PARTITION BY symbol ORDER BY date) AS daily_return FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}';"
        intent_keywords: ["daily returns", "returns", "histogram"]
    ui_requirements:
      value_col: "daily_return"

  - vis_type: "boxplot"
    description: "Boxplot for visualizing data distribution"
    templates:
      - name: "daily_returns_boxplot"
        description: "Daily returns for a company within a date range for boxplot"
        required_columns: ["date", "daily_return"]
        sql: "SELECT date, (close_price - LAG(close_price) OVER (PARTITION BY symbol ORDER BY date)) / LAG(close_price) OVER (PARTITION BY symbol ORDER BY date) AS daily_return FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}' ORDER BY date;"
        intent_keywords: ["daily returns", "returns", "boxplot"]
      - name: "monthly_prices_boxplot"
        description: "Monthly closing prices for a company within a date range"
        required_columns: ["month", "close_price"]
        sql: "SELECT TO_CHAR(date, 'YYYY-MM') AS month, close_price FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}' ORDER BY date;"
        intent_keywords: ["monthly prices", "prices", "boxplot"]
    ui_requirements:
      group_col: "date"
      value_col: "daily_return"
      group_transform: "to_month"

  - vis_type: "scatter"
    description: "Scatter plot for visualizing relationships"
    templates:
      - name: "scatter_volume_price"
        description: "Average daily volume vs closing price for companies within a date range"
        required_columns: ["avg_daily_volume", "avg_closing_price"]
        sql: "SELECT symbol, AVG(volume) AS avg_daily_volume, AVG(close_price) AS avg_closing_price FROM stock_prices WHERE date BETWEEN '{start_date}' AND '{end_date}' GROUP BY symbol ORDER BY avg_daily_volume, avg_closing_price;"
        intent_keywords: ["daily volume", "volume vs price", "scatter"]
    ui_requirements:
      x_col: "avg_daily_volume"
      y_col: "avg_closing_price"
      label_col: "symbol"

  - vis_type: "heatmap"
    description: "Heatmap for visualizing correlation"
    templates:
      - name: "heatmap_returns"
        description: "Correlation of daily returns between companies"
        required_columns: ["symbol1_return", "symbol2_return"]
        sql: "SELECT symbol, (close_price - LAG(close_price) OVER (PARTITION BY symbol ORDER BY date)) / LAG(close_price) OVER (PARTITION BY symbol ORDER BY date) AS daily_return FROM stock_prices WHERE symbol IN ({tickers}) AND date BETWEEN '{start_date}' AND '{end_date}';"
        intent_keywords: ["correlation", "heatmap", "returns"]
    ui_requirements:
      columns: ["symbol1_return", "symbol2_return"]