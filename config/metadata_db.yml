```yaml
database_description: Dow Jones Industrial Average (DJIA) companies database

tables:
  companies:
    description: Contains basic company information and metrics
    columns:
      - name: symbol
        type: VARCHAR(10)
        constraints: PRIMARY KEY
        description: Stock ticker symbol (e.g., 'AAPL')
      - name: name
        type: VARCHAR(255)
        description: Full name of the company (e.g., 'Apple Inc.')
      - name: sector
        type: VARCHAR(100)
        description: Economic sector classification (e.g., 'Technology')
      - name: industry
        type: VARCHAR(100)
        description: Specific industry within sector (e.g., 'Consumer Electronics')
      - name: country
        type: VARCHAR(100)
        description: Country where company is headquartered (e.g., 'United States')
      - name: website
        type: VARCHAR(255)
        description: Company's official website URL
      - name: market_cap
        type: BIGINT
        description: Market capitalization value in USD
      - name: pe_ratio
        type: DECIMAL(10,2)
        description: Price-to-earnings ratio
      - name: dividend_yield
        type: DECIMAL(5,2)
        description: Annual dividend yield percentage
      - name: week_high_52
        type: DECIMAL(10,2)
        description: Highest stock price in the last 52 weeks
      - name: week_low_52
        type: DECIMAL(10,2)
        description: Lowest stock price in the last 52 weeks
      - name: description
        type: TEXT
        description: Detailed company description

  stock_prices:
    description: Contains historical price information for stocks
    columns:
      - name: id
        type: SERIAL
        constraints: PRIMARY KEY
        description: Unique identifier
      - name: symbol
        type: VARCHAR(10)
        constraints: FOREIGN KEY referencing companies.symbol
        description: Stock ticker symbol
      - name: date
        type: DATE
        description: Date of the price record (YYYY-MM-DD)
      - name: open_price
        type: DECIMAL(10,2)
        description: Opening price for the day
      - name: high_price
        type: DECIMAL(10,2)
        description: Highest price during the day
      - name: low_price
        type: DECIMAL(10,2)
        description: Lowest price during the day
      - name: close_price
        type: DECIMAL(10,2)
        description: Closing price for the day
      - name: volume
        type: BIGINT
        description: Trading volume for the day
      - name: dividends
        type: DECIMAL(10,2)
        description: Dividends paid
      - name: stock_splits
        type: DECIMAL(10,2)
        description: Stock split ratio

relationships:
  - name: companies_to_stock_prices
    type: one-to-many
    description: One company can have many price records
    from:
      table: companies
      column: symbol
    to:
      table: stock_prices
      column: symbol

common_queries:
  - name: "Closing price on specific date"
    description: "Get the closing price of a company on a specific date"
    sql: "SELECT sp.close_price FROM companies c JOIN stock_prices sp ON c.symbol = sp.symbol WHERE c.name ILIKE '%{company}%' AND sp.date = '{date}'"
  - name: "Average closing price by company"
    description: "Calculate the average closing price for a company within a date range"
    sql: "SELECT c.name, AVG(sp.close_price) AS avg_close_price FROM companies c JOIN stock_prices sp ON c.symbol = sp.symbol WHERE c.name ILIKE '%{company}%' AND sp.date BETWEEN '{start_date}' AND '{end_date}' GROUP BY c.name"
  - name: "Compare closing price on specific date"
    description: "Compare the closing price of two companies on a specific date"
    sql: "SELECT c.name, sp.close_price FROM companies c JOIN stock_prices sp ON c.symbol = sp.symbol WHERE c.name IN ('{company1}', '{company2}') AND sp.date = '{date}'"
  - name: "Highest closing price in range"
    description: "Get the highest closing price of a company within a date range"
    sql: "SELECT sp.date, sp.close_price FROM companies c JOIN stock_prices sp ON c.symbol = sp.symbol WHERE c.name ILIKE '%{company}%' AND sp.date BETWEEN '{start_date}' AND '{end_date}' ORDER BY sp.close_price DESC LIMIT 1"
  - name: "Lowest closing price in range"
    description: "Get the lowest closing price of a company within a date range"
    sql: "SELECT sp.date, sp.close_price FROM companies c JOIN stock_prices sp ON c.symbol = sp.symbol WHERE c.name ILIKE '%{company}%' AND sp.date BETWEEN '{start_date}' AND '{end_date}' ORDER BY sp.close_price ASC LIMIT 1"
  - name: "Time series data"
    description: "Get the closing price time series for a company within a date range"
    sql: "SELECT sp.date, sp.close_price FROM companies c JOIN stock_prices sp ON c.symbol = sp.symbol WHERE c.name ILIKE '%{company}%' AND sp.date BETWEEN '{start_date}' AND '{end_date}' ORDER BY sp.date"

template_query:
  - name: "daily_returns_boxplot"
    description: "Get daily returns for a company within a date range for boxplot"
    required_columns: ["date", "daily_return"]
    requires_date: true
    sql: "SELECT date, (close_price - LAG(close_price) OVER (PARTITION BY symbol ORDER BY date)) / LAG(close_price) OVER (PARTITION BY symbol ORDER BY date) AS daily_return FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}' ORDER BY date;"
  - name: "daily_returns_histogram"
    description: "Get daily returns for a company within a date range for histogram"
    required_columns: ["daily_return"]
    requires_date: true
    sql: "SELECT (close_price - LAG(close_price) OVER (PARTITION BY symbol ORDER BY date)) / LAG(close_price) OVER (PARTITION BY symbol ORDER BY date) AS daily_return FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}';"
  - name: "boxplot_monthly"
    description: "Get monthly closing prices for a company within a date range"
    required_columns: ["month", "close_price"]
    requires_date: true
    sql: "SELECT TO_CHAR(date, 'YYYY-MM') AS month, close_price FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}' ORDER BY date;"
  - name: "scatter_volume_price"
    description: "Get average daily volume and closing price for companies within a date range"
    required_columns: ["avg_daily_volume", "avg_closing_price"]
    requires_date: true
    sql: "SELECT symbol, AVG(volume) AS avg_daily_volume, AVG(close_price) AS avg_closing_price FROM stock_prices WHERE date BETWEEN '{start_date}' AND '{end_date}' GROUP BY symbol ORDER BY avg_daily_volume, avg_closing_price;"
  - name: "pie_chart_count"
    description: "Get distribution of companies by sector with count"
    required_columns: ["sector", "count"]
    requires_date: false
    sql: "SELECT sector, COUNT(*) AS count FROM companies GROUP BY sector ORDER BY COUNT(*) DESC LIMIT 5;"
  - name: "pie_chart_proportion"
    description: "Get proportion of market cap by sector"
    required_columns: ["sector", "proportion"]
    requires_date: false
    sql: "SELECT sector, SUM(market_cap) / (SELECT SUM(market_cap) FROM companies) * 100 AS proportion FROM companies GROUP BY sector ORDER BY proportion DESC LIMIT 5;"
  - name: "line_chart_volume"
    description: "Get daily trading volume for a company within a date range"
    required_columns: ["date", "volume"]
    requires_date: true
    sql: "SELECT date, volume FROM stock_prices WHERE symbol = '{ticker}' AND date BETWEEN '{start_date}' AND '{end_date}' ORDER BY date;"